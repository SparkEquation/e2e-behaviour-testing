{"version":3,"file":"copyFiles.js","sources":["webpack:///webpack/bootstrap","webpack:///./config/prepareFilesToCopy.ts","webpack:///./config/projectNames.ts","webpack:///./src/scripts/copyFiles.ts","webpack:///./src/scripts/fileOperationsFunctions.ts","webpack:///./src/util/postinstallFilenamesConvertor.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/scripts/copyFiles.ts\");\n","import path from 'path';\nimport { filenameToPostInstallEntry } from '../src/util/postinstallFilenamesConvertor';\nimport { ProjectNames } from './projectNames';\nexport function prepareFilesToSave() {\n  return [{\n    path: path.resolve(ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_PLUGINS_SUBFOLDER),\n    name: ProjectNames.E2E_PLUGINS_FILE\n  }, {\n    path: path.resolve(ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_SUPPORT_SUBFOLER),\n    name: ProjectNames.E2E_SUPPORT_FILE\n  }, {\n    path: path.resolve(ProjectNames.CONFIG_FOLDER),\n    name: ProjectNames.E2E_TSCONFIG_FILE\n  }, {\n    path: path.resolve(ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_PAGE_OBJECTS_FOLDER),\n    name: ProjectNames.GITIGNORE_FILE\n  }, {\n    path: path.resolve(ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_PAGE_OBJECTS_FOLDER),\n    name: ProjectNames.GITIGNORE_FILE\n  }, {\n    path: path.resolve(ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_CONFIG_SUBFOLDER),\n    name: ProjectNames.CYPRESS_INTEGRATION_CONFIG_FILE\n  }, {\n    path: path.resolve(ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_CONFIG_SUBFOLDER),\n    name: ProjectNames.CYPRESS_UNIT_CONFIG_FILE\n  }].map(fileInfo => ({\n    from: path.resolve(fileInfo.path, fileInfo.name),\n    to: path.resolve(ProjectNames.POSTINSTALL_FOLDER, filenameToPostInstallEntry(fileInfo.name))\n  }));\n}\nexport function prepareSavedFilesToCopy(projectBasePath, libraryTemplatesPath) {\n  return [{\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_PAGE_OBJECTS_FOLDER),\n    name: ProjectNames.GITIGNORE_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_PLUGINS_SUBFOLDER),\n    name: ProjectNames.E2E_PLUGINS_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_FEATURES_SUBFOLER, ProjectNames.E2E_FEATURES_COMMON_SUBFOLDER),\n    name: ProjectNames.E2E_FEATURES_COMMON_BEFORE_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath),\n    name: ProjectNames.CYPRESS_CUCUMBER_CONFIG_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_CONFIG_SUBFOLDER),\n    name: ProjectNames.CYPRESS_INTEGRATION_CONFIG_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_CONFIG_SUBFOLDER),\n    name: ProjectNames.CYPRESS_UNIT_CONFIG_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER),\n    name: ProjectNames.E2E_TSCONFIG_FILE,\n    outputName: ProjectNames.OUTPUT_TSCONFIG_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER, ProjectNames.E2E_SUPPORT_SUBFOLER),\n    name: ProjectNames.E2E_SUPPORT_FILE\n  }, {\n    resultDir: path.resolve(projectBasePath),\n    name: ProjectNames.CYPRESS_ENV_FILE\n  }].map(fileInfo => ({\n    from: path.resolve(libraryTemplatesPath, filenameToPostInstallEntry(fileInfo.name)),\n    to: path.resolve(fileInfo.resultDir, fileInfo.outputName || fileInfo.name)\n  }));\n}\nexport function prepareDirectoriesToCreate(projectBasePath) {\n  const PROJECT_E2E_PATH = path.resolve(projectBasePath, ProjectNames.E2E_TESTS_FOLDER);\n  const PROJECT_PLUGINS_PATH = path.resolve(PROJECT_E2E_PATH, ProjectNames.E2E_PLUGINS_SUBFOLDER);\n  const PROJECT_SUPPORT_PATH = path.resolve(PROJECT_E2E_PATH, ProjectNames.E2E_SUPPORT_SUBFOLER);\n  const PROJECT_PAGE_OBJECTS_PATH = path.resolve(PROJECT_E2E_PATH, ProjectNames.E2E_PAGE_OBJECTS_FOLDER);\n  const PROJECT_TESTS_COMMON_PATH = path.resolve(PROJECT_E2E_PATH, ProjectNames.E2E_FEATURES_SUBFOLER, ProjectNames.E2E_FEATURES_COMMON_SUBFOLDER);\n  const PROJECT_E2E_CONFIG_PATH = path.resolve(PROJECT_E2E_PATH, ProjectNames.E2E_CONFIG_SUBFOLDER);\n  return [PROJECT_PLUGINS_PATH, PROJECT_SUPPORT_PATH, PROJECT_PAGE_OBJECTS_PATH, PROJECT_TESTS_COMMON_PATH, PROJECT_E2E_CONFIG_PATH];\n}","export let ProjectNames;\n\n(function (ProjectNames) {\n  ProjectNames[\"E2E_TESTS_FOLDER\"] = \"e2e\";\n  ProjectNames[\"E2E_PLUGINS_SUBFOLDER\"] = \"plugins\";\n  ProjectNames[\"E2E_PLUGINS_FILE\"] = \"plugins.js\";\n  ProjectNames[\"E2E_SUPPORT_SUBFOLER\"] = \"support\";\n  ProjectNames[\"E2E_SUPPORT_FILE\"] = \"support.js\";\n  ProjectNames[\"E2E_TSCONFIG_FILE\"] = \"tsconfig.common.json\";\n  ProjectNames[\"E2E_PAGE_OBJECTS_FOLDER\"] = \"pageObjects\";\n  ProjectNames[\"E2E_FEATURES_SUBFOLER\"] = \"features\";\n  ProjectNames[\"E2E_FEATURES_COMMON_SUBFOLDER\"] = \"common\";\n  ProjectNames[\"E2E_FEATURES_COMMON_BEFORE_FILE\"] = \"globalBefore.ts\";\n  ProjectNames[\"E2E_CONFIG_SUBFOLDER\"] = \"config\";\n  ProjectNames[\"GITIGNORE_FILE\"] = \".gitignore\";\n  ProjectNames[\"CONFIG_FOLDER\"] = \"config\";\n  ProjectNames[\"OUTPUT_FOLDER\"] = \"dist\";\n  ProjectNames[\"OUTPUT_TSCONFIG_FILE\"] = \"tsconfig.json\";\n  ProjectNames[\"OUTPUT_SCRIPTS_SUBFOLDER\"] = \"cli\";\n  ProjectNames[\"OUTPUT_CORE_FILENAME\"] = \"main.js\";\n  ProjectNames[\"POSTINSTALL_FOLDER\"] = \"postinstall\";\n  ProjectNames[\"SOURCES_FOLDER\"] = \"src\";\n  ProjectNames[\"SOURCES_SCRIPTS_SUBFOLDER\"] = \"scripts\";\n  ProjectNames[\"CORE_ENTRY_FILE\"] = \"index.ts\";\n  ProjectNames[\"TESTS_INDEX_FILE\"] = \"index.ts\";\n  ProjectNames[\"LIBRARY_NAME\"] = \"e2e-behaviour-testing\";\n  ProjectNames[\"CYPRESS_CONFIG_FILE\"] = \"cypress.json\";\n  ProjectNames[\"CYPRESS_INTEGRATION_CONFIG_FILE\"] = \"cypress.integration.json\";\n  ProjectNames[\"CYPRESS_UNIT_CONFIG_FILE\"] = \"cypress.unit.json\";\n  ProjectNames[\"CYPRESS_ENV_FILE\"] = \"cypress.env.json\";\n  ProjectNames[\"CYPRESS_CUCUMBER_CONFIG_FILE\"] = \".cypress-cucumber-preprocessorrc\";\n})(ProjectNames || (ProjectNames = {}));","/*\n * Copyright 2019 Spark Equation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport path from 'path';\nimport inquirer from 'inquirer';\nimport { ProjectNames } from '../../config/projectNames';\nimport { copyNecessaryFiles, createNecessaryDirectories } from './fileOperationsFunctions';\nimport { prepareDirectoriesToCreate, prepareSavedFilesToCopy } from '../../config/prepareFilesToCopy'; // webpack\n\n// Paths for project where this library is being installed\nconst PROJECT_BASE_PATH = path.resolve();\nconst LIBRARY_TEMPLATES_PATH = path.resolve('node_modules', PACKAGE_NAME, ProjectNames.POSTINSTALL_FOLDER);\nconst filesToCopy = prepareSavedFilesToCopy(PROJECT_BASE_PATH, LIBRARY_TEMPLATES_PATH);\nconst directoriesToCreate = prepareDirectoriesToCreate(PROJECT_BASE_PATH);\nconst choices = [{\n  name: 'Copy all files',\n  value: 'all'\n}, {\n  name: 'Copy files interactively',\n  value: 'interactive'\n}];\ninquirer.prompt([{\n  type: 'list',\n  name: 'way',\n  message: 'How do you want to copy files?',\n  choices\n}, {\n  type: 'confirm',\n  name: 'shouldReplaceExisting',\n  message: 'Do you want to replace the existing files?',\n  default: false,\n  when: ({\n    way\n  }) => {\n    return way === 'all';\n  }\n}]).then(({\n  way,\n  shouldReplaceExisting\n}) => {\n  if (way === 'interactive') {\n    console.error('Not implemented yet. Vote for it in github repo');\n    return;\n  }\n\n  createNecessaryDirectories(directoriesToCreate);\n  copyNecessaryFiles(filesToCopy, shouldReplaceExisting);\n});","/*\n * Copyright 2019 Spark Equation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from \"fs\";\nexport function copyNecessaryFiles(filesList, replaceExisting = false) {\n  filesList.forEach(({\n    from,\n    to\n  }) => {\n    copyFile(from, to, replaceExisting);\n  });\n}\nexport function createNecessaryDirectories(directoriesList) {\n  directoriesList.forEach(directory => {\n    createDirectoryIfNotExists(directory);\n  });\n}\nexport function createDirectoryIfNotExists(dirPath) {\n  if (!fs.existsSync(dirPath)) {\n    try {\n      fs.mkdirSync(dirPath, {\n        recursive: true\n      });\n    } catch (e) {\n      console.warn(`${PACKAGE_NAME.toUpperCase()}: Warning:\n\t\t\t\tCannot create directory, details:\n\t\t\t${e}`);\n    }\n  }\n}\nexport function copyFile(from, to, replaceExisting) {\n  let copyFlags = replaceExisting ? undefined : fs.constants.COPYFILE_EXCL;\n\n  try {\n    fs.copyFileSync(from, to, copyFlags);\n  } catch (e) {\n    if (e.code !== 'EEXIST' && !replaceExisting) {\n      console.warn(`${PACKAGE_NAME.toUpperCase()}: Warning:\n\t\t\t\tCannot copy file, details:\n\t\t\t${e}`);\n    }\n  }\n}","export const filenamePrefix = 'example';\nexport const filenamePostfix = 'template';\nexport function filenameToPostInstallEntry(name) {\n  return `${filenamePrefix}.${name}.${filenamePostfix}`;\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}